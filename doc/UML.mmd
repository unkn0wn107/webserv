classDiagram
class Server {
  <<singleton>>
  +Server()
  +Server(std::map<std::string, std::string> config)
  +start()
  +acceptConnection(): ConnectionHandler
  -config: ConfigLoader
  -connections: List~ConnectionHandler~
  -errorHandler: ErrorHandler
  -epoll_fd: int
}

class ConnectionHandler {
  +ConnectionHandler()
  +ConnectionHandler(std::map<std::string, std::string> config)
  +handleConnection(Socket)
  -socket: Socket
  -request: HTTPRequest
  -response: HTTPResponse
  -router: Router
  -logger: Logger
}

class HTTPRequest {
  +HTTPRequest()
  +getMethod(): String
  +getUrl(): String
  +getHeaders(): Map<String, String>
  +getBody(): String
  -method: String
  -url: String
  -headers: Map<String, String>
  -body: String
}

class HTTPResponse {
  +HTTPResponse()
  +setStatusCode(int)
  +getStatusCode(): int
  +setHeaders(Map<String, String>)
  +getHeaders(): Map<String, String>
  +setBody(String)
  +getBody(): String
  -statusCode: int
  -headers: Map<String, String>
  -body: String
}

class ConfigLoader {
  <<singleton>>
  +ConfigLoader()
  +ConfigLoader(const std::string* filepath)
  +getInstance(const std::string* filepath): ConfigLoader
  +loadConfig(String)
  +getConfigValue(String): String
  +getConfig(): Map<String, String>
  -config: Map<String, String>
}

class FileManager {
  +FileManager()
  +readFile(String): String
  +writeFile(String, String)
}

class ErrorHandler {
  +ErrorHandler()
  +exception(Exception)
  +log(String)
  +fatal(String)
}

class Logger {
  <<singleton>>
  +Logger()
  +getInstance(): Logger
  +log(String, int)
}

class Router {
  +Router()
  +route(HTTPRequest): Handler
  +addRoute(String, Handler)
  -routes: Map<String, Handler>
}

class Handler {
  <<interface>>
  +processRequest(HTTPRequest): HTTPResponse
}

class FileHandler {
  +FileHandler(FileManager&)
  +processRequest(HTTPRequest): HTTPResponse
  -fileManager: FileManager
}

class CGIHandler {
  +CGIHandler()
  +processRequest(HTTPRequest): HTTPResponse
  -identifyRuntime(String): String
  -runScript(String, HTTPRequest): String
}

Server "1" -- "0..*" ConnectionHandler : has
ConnectionHandler "1" -- "1" HTTPProtocol : has
HTTPProtocol <|-- HTTP1_1 : implements
ConnectionHandler "1" -- "1" HTTPRequest : has
ConnectionHandler "1" -- "1" HTTPResponse : has
Server "1" -- "1" ConfigLoader : uses
ConnectionHandler "1" -- "1" Router : uses
Router "1" -- "0..*" Handler : uses
Handler <|-- FileHandler : implements
Handler <|-- CGIHandler : implements
FileHandler "1" -- "1" FileManager : uses
ConnectionHandler "1" -- "1" FileManager : uses
ConnectionHandler "1" -- "1" Logger : uses
Server "1" -- "1" ErrorHandler : has
ConnectionHandler "1" -- "1" ErrorHandler : uses
FileManager "1" -- "1" ErrorHandler : uses
